<?php

/**
 * Implements hook_js().
 */
function dreditor_review_js() {
  return array(
    'parse' => array(
      'callback'     => 'dreditor_review_callback',
      'includes'     => array(),
      'dependencies' => array('system'),
      'skip_hook_init' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dreditor_review_menu() {
  $items['js/dreditor_review/parse'] = array(
    'title' => 'Profile',
    'description' => 'My Profile',
    'page callback' => 'dreditor_review_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_cron().
 *
 * Delete stale old review files.
 */
function dreditor_review_cron() {
  file_scan_directory('public://review', '/.*/', array('callback' => 'drupal_delete_file_if_stale'));
}

/**
 * Menu callback for 'review'.
 */
function dreditor_review_callback() {
  $callback = !empty($_GET['callback']) ? $_GET['callback'] : FALSE;
  $gzip = strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== FALSE;
  $html = !empty($_GET['html']) ? TRUE : FALSE;
  $json = array();
  $rebuild = !empty($_GET['rebuild']) ? TRUE : FALSE;
  $output = '{}';
  if (!empty($_GET['file'])) {
    $url = 'https://drupal.org' . $_GET['file'];
    $output = '';
    $url_info = parse_url($_GET['file']);
    $path_info = pathinfo($url_info['path']);

    // Ensure provided file is a patch.
    if (in_array($path_info['extension'], array('patch', 'diff', 'txt'))) {
      $dir = 'public://review';
      file_prepare_directory($dir, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
      $patch_file = $dir . '/' . $path_info['basename'];
      $html_file = $patch_file . '.html';
      $json_file = $patch_file . '.json';

      // Create JSON file, if needed.
      if ($rebuild || !file_exists($json_file) || !file_exists($html_file)) {
        // Build HTML file.
        if ($rebuild || !file_exists($html_file)) {
          // Download patch file.
          $request = drupal_http_request($url);
          if ($request->code === '200' && $request->headers['content-type'] === 'text/plain; charset=utf-8') {
            file_unmanaged_save_data($request->data, $patch_file, FILE_EXISTS_REPLACE);
          }
          // Parse the patch file into HTML.
          $json['diff_stats'] = dreditor_review_parse_file($patch_file, $html_file);
          // Delete original patch file.
          file_unmanaged_delete($patch_file);
        }
        // Build JSON file.
        if ($rebuild || (!$html && !file_exists($json_file))) {
          // Construct the JSON data to be sent.
          $json['content'] = file_get_contents($html_file);
          // Create JSON file.
          file_put_contents($json_file, drupal_json_encode($json));
        }
      }

      // Get JSON file.
      $output = file_get_contents($html ? $html_file : $json_file);

      // Wrap with callback, if necessary.
      if (!$html && $callback) {
        $output = $callback . '(' . $output . ')';
      }

      // GZIP encode output, if browser supports it.
      if ($gzip) {
        $output = gzencode($output, 9);
        drupal_add_http_header('Content-Encoding', 'gzip');
        drupal_add_http_header('Vary', 'Accept-Encoding');
      }

      // Add necessary headers.
      drupal_add_http_header('Access-Control-Allow-Origin', 'https://drupal.org');
      drupal_add_http_header('Content-Length', strlen($output));
      drupal_add_http_header('Content-Type', ($html ? 'text/html' : 'application/json') . '; charset=utf-8');
    }
  }
  // Print output.
  echo $output;
  drupal_exit();
}

/**
 * Parses a patch file into HTML.
 *
 * @param string $source
 *   The URI path of the source.
 * @param string $destination
 *   The URI path of the destination.
 */
function dreditor_review_parse_file($source, $destination) {
  if (($sh = @fopen($source, 'r')) && ($dh = @fopen($destination, 'w'))) {
    $in_format_patch = FALSE;
    $in_diff_stats = FALSE;
    $in_code_diff = FALSE;
    $diff_stats = array(
      'files' => 0,
      'additions' => 0,
      'deletions' => 0,
    );
    $ln1 = 0;
    $ln2 = 0;
    while (($line = fgets($sh, 4096)) !== FALSE) {
      $ln1o = TRUE;
      $ln2o = TRUE;
      $line = rtrim($line);
      if (preg_match('/^From:? [\da-z]{40}/', $line)) {
        if ($in_diff_stats) {
          fwrite($dh, '</div>' . PHP_EOL);
        }
        elseif ($in_code_diff) {
          fwrite($dh, '  </tbody>' . PHP_EOL);
          fwrite($dh, '</table>' . PHP_EOL);
        }
        fwrite($dh, '<div class="dr dr-fp">' . PHP_EOL);
        $in_format_patch = TRUE;
        $in_diff_stats = FALSE;
        $in_code_diff = FALSE;
      }
      elseif (preg_match('/^diff/', $line)) {
        if ($in_format_patch) {
          fwrite($dh, '</div>' . PHP_EOL);
        }
        elseif ($in_code_diff) {
          fwrite($dh, '  </tbody>' . PHP_EOL);
          fwrite($dh, '</table>' . PHP_EOL);
        }
        fwrite($dh, '<div class="dr dr-stat">' . PHP_EOL);
        fwrite($dh, '  <div>' . $line . '</div>' . PHP_EOL);
        $in_format_patch = FALSE;
        $in_diff_stats = TRUE;
        $in_code_diff = FALSE;
        $diff_stats['files']++;
        continue;
      }
      elseif (preg_match('/^@@/', $line)) {
        if ($in_format_patch || $in_diff_stats) {
          fwrite($dh, '  <div>' . $line . '</div>' . PHP_EOL);
          fwrite($dh, '</div>' . PHP_EOL);
        }
        fwrite($dh, '<table class="dr dr--diff">' . PHP_EOL);
        fwrite($dh, '  <tbody>' . PHP_EOL);
        if (preg_match('/^@@ -([0-9]+),[0-9]+ \+([0-9]+),[0-9]+ @@/', $line, $matches)) {
          $ln1 = $matches[1];
          $ln2 = $matches[2];
        }
        $in_format_patch = FALSE;
        $in_diff_stats = FALSE;
        $in_code_diff = TRUE;
        continue;
      }
      if ($in_diff_stats || $in_format_patch) {
        fwrite($dh, '  <div>' . $line . '</div>' . PHP_EOL);
      }
      elseif ($in_code_diff) {
        $row_attributes = array(
          'class' => array(
            'ln',
          ),
        );
        if (preg_match('/^(?!\+\+\+)\+/', $line)) {
          $row_attributes['class'][] = 'ln--a';
          $diff_stats['additions']++;
          if ($ln2) {
            $ln1o = FALSE;
            $ln2++;
          }
        }
        elseif (preg_match('/^((?!\-\-\-$|\-\-$)\-)/', $line)) {
          $row_attributes['class'][] = 'ln--r';
          $diff_stats['deletions']++;
          if ($ln1) {
            $ln2o = FALSE;
            $ln1++;
          }
        }
        else {
          if ($ln1 && $ln1o) {
            $ln1++;
          }
          if ($ln2 && $ln2o) {
            $ln2++;
          }
        }

        if (empty($line)) {
          $row_attributes['class'][] = 'ln--e';
          $line = '&nbsp;';
        }

        fwrite($dh, '    <tr' . drupal_attributes($row_attributes) . '><td class="num">' . ($ln1o ? $ln1 : '') . '</td><td class="num">' . ($ln2o ? $ln2 : '') . '</td><td><span class="pre">' . $line . '</span></td></tr>' . PHP_EOL);
      }
    }
    if ($in_code_diff) {
      fwrite($dh, '  </tbody>' . PHP_EOL);
      fwrite($dh, '</table>' . PHP_EOL);
    }
    fclose($sh);
    fclose($dh);
    return $diff_stats;
  }
}
